{"version":3,"sources":["index.jsx"],"names":["InputCheckbox","props","checked","setChecked","error","setError","id","disabled","loading","success","e","onEvent","type","origin","data","state","name","label","defaultProps","propTypes","PropTypes","string","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Row, Column } from '../Grid'\n\nimport\n  {\n    StyledCheckbox,\n    StyledInput,\n    StyledContainer,\n    StyledText,\n    StyledIconLoading\n  }\nfrom \"./styles\"\n\nconst InputCheckbox = props => {\n  const [checked, setChecked] = useState(props.checked || false)\n  const [error, setError] = useState(props.error || false)\n\n  return (\n    <StyledContainer\n      id={props.id}\n      checked={checked}\n      disabled={props.disabled || props.loading}\n      error={error}\n      loading={props.loading}\n      success={props.success}\n      onMouseEnter={ e => {\n        props.onEvent({\n          type: \"onMouseEnter\",\n          origin: \"Checkbox\",\n          props: {\n            data: {\n              ...props.data,\n              checked,\n            },\n            state: {\n              error: error,\n              loading: props.loading,\n              success: props.success,\n              disabled: props.disabled,\n            }\n          }\n        })\n      }}\n      onClick={() => {\n        setError(false)\n        !props.loading && !props.disabled && props.onEvent({\n          type: \"onClick\",\n          origin: \"Checkbox\",\n          props: {\n            data: {\n              ...props.data,\n              checked: !checked,\n            },\n            state: {\n              error: error,\n              loading: props.loading,\n              success: props.success,\n              disabled: props.disabled,\n            }\n          }\n        })\n        !props.loading && !props.disabled && setChecked(!checked)\n      }}\n    >\n      <Row alignCenter fitContent >\n        <Column noPadding>\n          <StyledCheckbox\n            checked={checked}\n            loading={props.loading}\n            error={error}\n            success={props.success}\n          >\n            <StyledInput\n              name={props.name}\n              checked={checked}\n              onChange={() => {}}\n              type=\"checkbox\" />\n          </StyledCheckbox>\n        </Column>\n        {\n          props.label && (\n            <Column>\n              <StyledText\n                label={props.label}\n                checked={checked}\n                loading={props.loading}\n              />\n            </Column>\n          )\n        }\n        {\n          props.loading && <StyledIconLoading label={props.label} />\n        }\n      </Row>\n    </StyledContainer>\n  )\n}\n\nInputCheckbox.defaultProps = {\n  onEvent: null,\n  data: null,\n  checked\t: false,\n  disabled: false,\n  success: false,\n  error: false,\n  loading: false,\n}\n\nInputCheckbox.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  onEvent: PropTypes.func.isRequired,\n  data: PropTypes.string,\n  checked\t: PropTypes.bool,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n}\n\nexport default InputCheckbox\n"]}